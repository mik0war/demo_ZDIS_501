# Form implementation generated from reading ui file 'ui/main_window.ui'
#
# Created by: PyQt6 UI code generator 6.9.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtCore import QSize, pyqtSlot
from PyQt6.QtGui import QWindow
from PyQt6.QtWidgets import QListWidgetItem, QWidget, QDialog

from src.data_types import Partner
from src.edit_window import UiEditWindow
from src.item_list import Ui_Form


class Ui_MainWindow(object):
    def __init__(self):
        self.ui_edit = None

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        font = QtGui.QFont()
        font.setPointSize(14)
        MainWindow.setFont(font)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("ui\\../Мастер пол.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setStyleSheet("selection-color: rgb(103, 186, 128);\n"
"alternate-background-color: rgb(244, 232, 211);")
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.listWidget = QtWidgets.QListWidget(parent=self.centralwidget)
        self.listWidget.setGeometry(QtCore.QRect(10, 10, 781, 451))
        self.listWidget.setObjectName("listWidget")
        self.create_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.create_button.setGeometry(QtCore.QRect(14, 470, 771, 24))
        self.create_button.setObjectName("create_button")
        self.create_button.clicked.connect(self.create_click)

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 32))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.edit_window = QtWidgets.QWidget()
        self.ui_edit = UiEditWindow()
        self.ui_edit.setupUi(self.edit_window, self)

        self.listWidget.itemDoubleClicked.connect(self.edit_click)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def create_click(self):
        self.ui_edit.retranslateUi(self.edit_window, Partner())
        self.edit_window.show()

    def edit_click(self, item: QListWidgetItem):
        partner = item.data(QtCore.Qt.ItemDataRole.UserRole)
        self.ui_edit.retranslateUi(self.edit_window, partner)
        self.edit_window.show()

    def clear_list(self):
        self.listWidget.clear()


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Модуль работы с партнёрами"))
        self.create_button.setText(_translate("MainWindow", "Создать партнёра"))

    def show_data(self, partners):
        for partner in partners:
            widget = QWidget()
            ui_form = Ui_Form()
            ui_form.setupUi(widget, partner)

            item = QListWidgetItem()
            item.setSizeHint(QSize(800, 150))
            item.setData(QtCore.Qt.ItemDataRole.UserRole, partner)
            self.listWidget.addItem(item)
            self.listWidget.setItemWidget(item, widget)




if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
